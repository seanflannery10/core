// Code generated by ogen, DO NOT EDIT.

package api

import (
	"time"
)

// SetFake set fake values.
func (s *AcceptanceResponse) SetFake() {
	{
		{
			s.Message = "string"
		}
	}
}

// SetFake set fake values.
func (s *ActivateUserBadRequest) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = ActivateUserBadRequest(unwrapped)
}

// SetFake set fake values.
func (s *ActivateUserInternalServerError) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = ActivateUserInternalServerError(unwrapped)
}

// SetFake set fake values.
func (s *ActivateUserNotFound) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = ActivateUserNotFound(unwrapped)
}

// SetFake set fake values.
func (s *ActivateUserUnauthorized) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = ActivateUserUnauthorized(unwrapped)
}

// SetFake set fake values.
func (s *ActivateUserUnprocessableEntity) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = ActivateUserUnprocessableEntity(unwrapped)
}

// SetFake set fake values.
func (s *DeleteMessageBadRequest) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = DeleteMessageBadRequest(unwrapped)
}

// SetFake set fake values.
func (s *DeleteMessageInternalServerError) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = DeleteMessageInternalServerError(unwrapped)
}

// SetFake set fake values.
func (s *DeleteMessageNotFound) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = DeleteMessageNotFound(unwrapped)
}

// SetFake set fake values.
func (s *DeleteMessageUnauthorized) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = DeleteMessageUnauthorized(unwrapped)
}

// SetFake set fake values.
func (s *DeleteMessageUnprocessableEntity) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = DeleteMessageUnprocessableEntity(unwrapped)
}

// SetFake set fake values.
func (s *ErrorResponse) SetFake() {
	{
		{
			s.Error = "string"
		}
	}
}

// SetFake set fake values.
func (s *GetMessageBadRequest) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = GetMessageBadRequest(unwrapped)
}

// SetFake set fake values.
func (s *GetMessageInternalServerError) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = GetMessageInternalServerError(unwrapped)
}

// SetFake set fake values.
func (s *GetMessageNotFound) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = GetMessageNotFound(unwrapped)
}

// SetFake set fake values.
func (s *GetMessageUnauthorized) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = GetMessageUnauthorized(unwrapped)
}

// SetFake set fake values.
func (s *GetMessageUnprocessableEntity) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = GetMessageUnprocessableEntity(unwrapped)
}

// SetFake set fake values.
func (s *GetUserMessagesBadRequest) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = GetUserMessagesBadRequest(unwrapped)
}

// SetFake set fake values.
func (s *GetUserMessagesInternalServerError) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = GetUserMessagesInternalServerError(unwrapped)
}

// SetFake set fake values.
func (s *GetUserMessagesNotFound) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = GetUserMessagesNotFound(unwrapped)
}

// SetFake set fake values.
func (s *GetUserMessagesUnauthorized) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = GetUserMessagesUnauthorized(unwrapped)
}

// SetFake set fake values.
func (s *GetUserMessagesUnprocessableEntity) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = GetUserMessagesUnprocessableEntity(unwrapped)
}

// SetFake set fake values.
func (s *MessageRequest) SetFake() {
	{
		{
			s.Message = "string"
		}
	}
}

// SetFake set fake values.
func (s *MessageResponse) SetFake() {
	{
		{
			s.ID = int64(0)
		}
	}
	{
		{
			s.Message = "string"
		}
	}
	{
		{
			s.Version = int32(0)
		}
	}
}

// SetFake set fake values.
func (s *MessagesMetadataResponse) SetFake() {
	{
		{
			s.CurrentPage = int32(0)
		}
	}
	{
		{
			s.FirstPage = int32(0)
		}
	}
	{
		{
			s.LastPage = int32(0)
		}
	}
	{
		{
			s.PageSize = int32(0)
		}
	}
	{
		{
			s.TotalRecords = int64(0)
		}
	}
}

// SetFake set fake values.
func (s *MessagesResponse) SetFake() {
	{
		{
			s.Messages = nil
			for i := 0; i < 0; i++ {
				var elem MessageResponse
				{
					elem.SetFake()
				}
				s.Messages = append(s.Messages, elem)
			}
		}
	}
	{
		{
			s.Metadata.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NewAccessTokenBadRequest) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = NewAccessTokenBadRequest(unwrapped)
}

// SetFake set fake values.
func (s *NewAccessTokenInternalServerError) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = NewAccessTokenInternalServerError(unwrapped)
}

// SetFake set fake values.
func (s *NewAccessTokenUnauthorized) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = NewAccessTokenUnauthorized(unwrapped)
}

// SetFake set fake values.
func (s *NewActivationTokenBadRequest) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = NewActivationTokenBadRequest(unwrapped)
}

// SetFake set fake values.
func (s *NewActivationTokenInternalServerError) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = NewActivationTokenInternalServerError(unwrapped)
}

// SetFake set fake values.
func (s *NewActivationTokenNotFound) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = NewActivationTokenNotFound(unwrapped)
}

// SetFake set fake values.
func (s *NewActivationTokenUnprocessableEntity) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = NewActivationTokenUnprocessableEntity(unwrapped)
}

// SetFake set fake values.
func (s *NewMessageBadRequest) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = NewMessageBadRequest(unwrapped)
}

// SetFake set fake values.
func (s *NewMessageInternalServerError) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = NewMessageInternalServerError(unwrapped)
}

// SetFake set fake values.
func (s *NewMessageNotFound) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = NewMessageNotFound(unwrapped)
}

// SetFake set fake values.
func (s *NewMessageUnauthorized) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = NewMessageUnauthorized(unwrapped)
}

// SetFake set fake values.
func (s *NewMessageUnprocessableEntity) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = NewMessageUnprocessableEntity(unwrapped)
}

// SetFake set fake values.
func (s *NewPasswordResetTokenBadRequest) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = NewPasswordResetTokenBadRequest(unwrapped)
}

// SetFake set fake values.
func (s *NewPasswordResetTokenInternalServerError) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = NewPasswordResetTokenInternalServerError(unwrapped)
}

// SetFake set fake values.
func (s *NewPasswordResetTokenNotFound) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = NewPasswordResetTokenNotFound(unwrapped)
}

// SetFake set fake values.
func (s *NewPasswordResetTokenUnprocessableEntity) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = NewPasswordResetTokenUnprocessableEntity(unwrapped)
}

// SetFake set fake values.
func (s *NewRefreshTokenBadRequest) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = NewRefreshTokenBadRequest(unwrapped)
}

// SetFake set fake values.
func (s *NewRefreshTokenInternalServerError) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = NewRefreshTokenInternalServerError(unwrapped)
}

// SetFake set fake values.
func (s *NewRefreshTokenNotFound) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = NewRefreshTokenNotFound(unwrapped)
}

// SetFake set fake values.
func (s *NewRefreshTokenUnauthorized) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = NewRefreshTokenUnauthorized(unwrapped)
}

// SetFake set fake values.
func (s *NewRefreshTokenUnprocessableEntity) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = NewRefreshTokenUnprocessableEntity(unwrapped)
}

// SetFake set fake values.
func (s *NewUserBadRequest) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = NewUserBadRequest(unwrapped)
}

// SetFake set fake values.
func (s *NewUserInternalServerError) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = NewUserInternalServerError(unwrapped)
}

// SetFake set fake values.
func (s *NewUserNotFound) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = NewUserNotFound(unwrapped)
}

// SetFake set fake values.
func (s *NewUserUnprocessableEntity) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = NewUserUnprocessableEntity(unwrapped)
}

// SetFake set fake values.
func (s *OptDateTime) SetFake() {
	var elem time.Time
	{
		elem = time.Now()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptString) SetFake() {
	var elem string
	{
		elem = "string"
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *TokenRequest) SetFake() {
	{
		{
			s.Plaintext = "string"
		}
	}
}

// SetFake set fake values.
func (s *TokenResponse) SetFake() {
	{
		{
			s.Scope.SetFake()
		}
	}
	{
		{
			s.Expiry.SetFake()
		}
	}
	{
		{
			s.Plaintext = "string"
		}
	}
}

// SetFake set fake values.
func (s *UpdateMessageBadRequest) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = UpdateMessageBadRequest(unwrapped)
}

// SetFake set fake values.
func (s *UpdateMessageConflict) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = UpdateMessageConflict(unwrapped)
}

// SetFake set fake values.
func (s *UpdateMessageInternalServerError) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = UpdateMessageInternalServerError(unwrapped)
}

// SetFake set fake values.
func (s *UpdateMessageNotFound) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = UpdateMessageNotFound(unwrapped)
}

// SetFake set fake values.
func (s *UpdateMessageUnauthorized) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = UpdateMessageUnauthorized(unwrapped)
}

// SetFake set fake values.
func (s *UpdateMessageUnprocessableEntity) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = UpdateMessageUnprocessableEntity(unwrapped)
}

// SetFake set fake values.
func (s *UpdateUserPasswordBadRequest) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = UpdateUserPasswordBadRequest(unwrapped)
}

// SetFake set fake values.
func (s *UpdateUserPasswordInternalServerError) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = UpdateUserPasswordInternalServerError(unwrapped)
}

// SetFake set fake values.
func (s *UpdateUserPasswordNotFound) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = UpdateUserPasswordNotFound(unwrapped)
}

// SetFake set fake values.
func (s *UpdateUserPasswordRequest) SetFake() {
	{
		{
			s.Password = "string"
		}
	}
	{
		{
			s.Token = "string"
		}
	}
}

// SetFake set fake values.
func (s *UpdateUserPasswordUnauthorized) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = UpdateUserPasswordUnauthorized(unwrapped)
}

// SetFake set fake values.
func (s *UpdateUserPasswordUnprocessableEntity) SetFake() {
	var unwrapped ErrorResponse
	{
		unwrapped.SetFake()
	}
	*s = UpdateUserPasswordUnprocessableEntity(unwrapped)
}

// SetFake set fake values.
func (s *UserEmailRequest) SetFake() {
	{
		{
			s.Email = "string"
		}
	}
}

// SetFake set fake values.
func (s *UserLoginRequest) SetFake() {
	{
		{
			s.Email = "string"
		}
	}
	{
		{
			s.Password = "string"
		}
	}
}

// SetFake set fake values.
func (s *UserRequest) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Email = "string"
		}
	}
	{
		{
			s.Password = "string"
		}
	}
}

// SetFake set fake values.
func (s *UserResponse) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Email = "string"
		}
	}
	{
		{
			s.Version = int32(0)
		}
	}
}
