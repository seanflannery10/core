# https://taskfile.dev

version: '3'

dotenv: ['.env']

tasks:
  default:
    cmds:
      - task go:audit

  go:tidy:
    cmds:
      - sqlc compile --experimental
      - sqlc generate --experimental
      - ogen -no-client -no-webhook-client -no-webhook-server -generate-tests --target internal/api -package api --clean openapi.yaml
      - go mod tidy -v

  go:audit:
    deps: [go:tidy]
    cmds:
      - golangci-lint run --fix
      - go test -race -vet=off ./internal/testing/unit/
      - go mod verify

  go:test:
    cmds:
      - docker stop postgres-test > /dev/null 2>&1 || true && docker rm postgres-test > /dev/null 2>&1 || true
      - docker run --rm --stop-timeout 120 --name postgres-test -p 5433:5432 --tmpfs /var/lib/postgresql/data:rw -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=test -e POSTGRES_DB=test --pull always -d postgres:15
      - timeout 5m bash -c 'until pg_isready -q -h localhost -p 5433 --timeout=30 -d test; do sleep 1; done'
      - dbmate -d "./db/migrations" --url postgres://postgres:test@localhost:5433/test?sslmode=disable up
      - go test -race -vet=off ./...

  go:upgrade:
    cmds:
      - go get -u ./...

  tilt:up:
    cmds:
      - tilt up

  tilt:down:
    cmds:
      - tilt down --delete-namespaces

  db:migrations:
    cmds:
      - dbmate -d "./db/migrations" --url $DATABASE_URL up

  db:psql:
    cmds:
      - psql $DATABASE_URL

  fly:deploy:
    cmds:
      - flyctl deploy

  fly:proxy:
    cmds:
      - flyctl proxy 5432 --app core-8585-db