# https://taskfile.dev

version: '3'

dotenv: ['.env']

tasks:
  default:
    cmds:
      - task go:test

  go:tidy:
    cmds:
      - sqlc compile --experimental
      - sqlc generate --experimental
      - ogen -no-client -no-webhook-client -no-webhook-server --target internal/generated/api -package api --clean openapi.yaml
      - go mod tidy -v

  go:audit:
    deps: [go:tidy]
    cmds:
      - golangci-lint run --fix
      - go mod verify

  go:test:
    deps: [go:audit]
    cmds:
      - docker run --name postgres-test -p 5433:5432 --tmpfs /var/lib/postgresql/data:rw -e POSTGRES_USER=$POSTGRES_USER -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD -e POSTGRES_DB=$POSTGRES_DB --rm --pull always -d postgres:15 #postgres -c log_statement=all
      - docker run --name smtp4dev-test -p 2525:25 --tmpfs /smtp4dev:rw --rm --pull always -d rnwood/smtp4dev
      - defer: docker stop postgres-test smtp4dev-test
      - timeout 1m bash -c 'until pg_isready -q -h localhost -p 5433 -d $POSTGRES_DB; do sleep 1; done'
      - dbmate -d "./db/migrations" --url postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost:5433/$POSTGRES_DB?sslmode=disable up
      - dbmate -d "./db/test_data" --url postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost:5433/$POSTGRES_DB?sslmode=disable up
      - go test -coverprofile=coverage.out -coverpkg=./internal/server/...,./internal/shared/... ./...

  go:coverage:
    cmds:
      - go tool cover -html=coverage.out

  go:upgrade:
    cmds:
      - go get -u ./...

  tilt:up:
    cmds:
      - tilt up

  tilt:down:
    cmds:
      - tilt down --delete-namespaces

  db:migrations:
    cmds:
      - dbmate -d "./db/migrations" --url $DATABASE_URL up

  db:psql:
    cmds:
      - psql $DATABASE_URL

  fly:deploy:
    cmds:
      - flyctl deploy

  fly:proxy:
    cmds:
      - flyctl proxy 5432 --app core-8585-db