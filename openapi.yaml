openapi: 3.0.3
info:
  title: Core API
  description: This is a core server.
  contact:
    name: Core Support
    url: https://github.com/seanflannery10/
    email: seanflannery10@gmail.com
  version: 0.1.0
servers:
  - url: //api.seanflannery.dev/v1
paths:
  /messages:
    get:
      tags:
        - messages
      summary: get user messages
      operationId: get-user-messages
      security:
        - BearerAuth: [ ]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Messages'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - messages
      summary: create new message
      operationId: create-message
      security:
        - BearerAuth: [ ]
      requestBody:
        description: new message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /messages/{id}:
    get:
      tags:
        - messages
      summary: get a message
      operationId: get-message
      security:
        - BearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - messages
      summary: update a message
      operationId: update-message
      security:
        - BearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: updated message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - messages
      summary: delete a message
      operationId: delete-message
      security:
        - BearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        202:
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tokens/access:
    post:
      tags:
        - tokens
      summary: create access token using a refresh token
      operationId: create-token-access
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tokens/activation:
    post:
      tags:
        - tokens
      summary: create activation token using an email address
      operationId: create-token-activation
      requestBody:
        description: new message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEmail'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tokens/password-reset:
    post:
      tags:
        - tokens
      summary: create password reset token using an email address
      operationId: create-token-password-reset
      responses:
        201:
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Token'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
  /tokens/refresh:
    post:
      tags:
        - tokens
      summary: create refresh token using an email address and password
      operationId: create-token-refresh
      responses:
        201:
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Token'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
  /users/activate:
    patch:
      tags:
        - users
      summary: activate new inactivate account using a token
      operationId: activate-user
      requestBody:
        description: new message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/register:
    post:
      tags:
        - users
      summary: create new user account
      operationId: create-user
      requestBody:
        description: new message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/update-password:
    patch:
      tags:
        - users
      summary: update user password using a token
      operationId: update-user-password
      requestBody:
        description: new message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenWithPassword'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Error:
      type: object
      description: "Contains a required message and either error message or validation errors"
      properties:
        error:
          type: string
        errors:
          type: object
          additionalProperties:
            type: string
        message:
          type: string
      required:
        - message
    Message:
      type: object
      description: "Contains a required message as well as optional properties"
      properties:
        created_at:
          type: string
          format: datetime
        id:
          type: integer
          format: int64
        message:
          type: string
        user_id:
          type: integer
          format: int64
        version:
          type: integer
      required:
        - message
    MessageID:
      type: object
      description: "Contains a required id"
      properties:
        id:
          type: integer
          format: int64
      required:
        - id
    Messages:
      type: object
      description: "Contains required messages and metadata objects"
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        metadata:
          $ref: '#/components/schemas/MessagesMetadata'
      required:
        - messages
        - metadata
    MessagesMetadata:
      type: object
      description: "Contains required metadata"
      properties:
        current_page:
          type: integer
        first_page:
          type: integer
        last_page:
          type: integer
        page_size:
          type: integer
        total_records:
          type: integer
      required:
        - current_page
        - first_page
        - last_page
        - page_size
        - total_records
    Token:
      type: object
      description: "Contains a required plaintext token as well as optional properties"
      properties:
        expiry:
          type: string
          format: datetime
        plaintext:
          type: string
          format: password
        scope:
          type: string
        userID:
          type: integer
          format: int64
      required:
        - plaintext
    TokenWithPassword:
      type: object
      description: "Contains a required password and token object"
      properties:
        password:
          type: string
          format: password
        token:
          $ref: '#/components/schemas/Token'
      required:
        - password
        - token
    User:
      type: object
      description: "Contains a required username, email and password as well as optional properties"
      properties:
        activated:
          type: boolean
        created_at:
          type: string
          format: datetime
        email:
          type: string
          format: email
        id:
          type: integer
          format: int64
        name:
          type: string
        password_hash:
          type: string
          format: base64
        version:
          type: integer
      required:
        - email
        - id
        - name
    UserEmail:
      type: object
      description: "Contains a required email address"
      properties:
        email:
          type: string
          format: email
      required:
        - email
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
